FROM ubuntu:18.04

ARG PYTHON_VERSION="3.7.9"
ARG CARLA_VERSION="0.9.11"
ARG CARLA_EGG_VERSION="0.9.11"
ARG HOME="/root"
ARG PYTHON_ROOT="$HOME/local/python-$PYTHON_VERSION"
ARG PYENV_ROOT="$HOME/.pyenv"
ENV PATH="$PYTHON_ROOT/bin:$PATH"

WORKDIR /root/

RUN sed -i 's@archive.ubuntu.com@ftp.jaist.ac.jp/pub/Linux@g' /etc/apt/sources.list

ENV NVIDIA_VISIBLE_DEVICES ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y \
        git \
        make \
        build-essential \
        clang-8 \
        lld-8 \
        g++-7 \
        cmake \
        ninja-build \
        libvulkan1 \
        libssl-dev \
        zlib1g-dev \
        libbz2-dev \
        libreadline-dev \
        libsqlite3-dev \
        wget \
        curl \
        llvm \
        libncurses5-dev \
        libncursesw5-dev \
        xz-utils \
        tk-dev \
        libffi-dev \
        libpng-dev \
        libtiff5-dev \
        libjpeg-dev \
        tzdata \
        sed \
        curl \
        unzip \
        autoconf \
        libtool \
        rsync \
        libxml2-dev \
        libsdl-dev \
        libsdl-image1.2-dev \
        libsdl-mixer1.2-dev \
        libsdl-ttf2.0-dev \
        libsmpeg-dev \
        libportmidi-dev \
        libavformat-dev \
        libswscale-dev \
        libxkbcommon-x11-0 \
        libxcb-icccm4 \
        libxcb-image0 \
        libxcb-keysyms1 \
        libxcb-render-util0 \
        libxcb-xinerama0 \
        liblzma-dev \
        python-opengl && \
    update-alternatives --install /usr/bin/clang++ clang++ /usr/lib/llvm-8/bin/clang++ 180 && \
    update-alternatives --install /usr/bin/clang clang /usr/lib/llvm-8/bin/clang 180 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN git clone https://github.com/pyenv/pyenv.git $PYENV_ROOT && \
    $PYENV_ROOT/plugins/python-build/install.sh && \
    /usr/local/bin/python-build -v $PYTHON_VERSION $PYTHON_ROOT && \
    rm -rf $PYENV_ROOT

RUN pip install -Iv \
        setuptools==47.3.1 && \
    pip install \
        distro \
        numpy \
        scipy \
        opencv-python==4.2.0.34 \
        PySide2 \
        PyOpenGL \
        PyOpenGL_accelerate \
        pyqtgraph \
        transforms3d \
        pygame && \
    pip install --trusted-host git-docker.tasakilab --extra-index-url http://git-docker.tasakilab:5500/simple h5datacreator

RUN ln -s ${HOME}/local/python-${PYTHON_VERSION}/include/python3.7m ${HOME}/local/python-${PYTHON_VERSION}/include/python3.7

RUN git clone -b ${CARLA_VERSION} https://github.com/carla-simulator/carla.git && \
    cd carla && \
    make PythonAPI && \
    mkdir -p -v /opt/carla && \
    cp -r -v PythonAPI /opt/carla/ && \
    curl -c /tmp/cookie "https://drive.google.com/uc?export=download&id=1Hl9JvIkC0WmAr0iM-Op2KmQC6Ha4allB" > /dev/nullc && \
    CODE="$(awk '/_warning_/ {print $NF}' /tmp/cookie)" && \
    curl -Lb /tmp/cookie "https://drive.google.com/uc?export=download&confirm=${CODE}&id=1Hl9JvIkC0WmAr0iM-Op2KmQC6Ha4allB" -o Import/AdditionalMaps_${CARLA_VERSION}.tar.gz && \
    cp Util/ImportAssets.sh ./ && \
    ./ImportAssets.sh && \
    cd .. && \
    mv carla /tmp

RUN ln -s /opt/carla

ENV PYTHONPATH "${PYTHONPATH}:/opt/carla/PythonAPI/carla/dist/carla-${CARLA_EGG_VERSION}-py3.7-linux-x86_64.egg"

WORKDIR /workspace
